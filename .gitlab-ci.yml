stages:
  - Lint
  - Test

pylint:
  stage: Lint
  image: python:3.7-slim
  before_script:
    - mkdir -p public/badges public/lint
    - echo undefined > public/badges/$CI_JOB_NAME.score
    - pip install pylint-gitlab
  script:
    - pylint --output-format=text $(find -not -path "./examples/*" -not -path "./src/tests/*" -type f -name "*.py" ! -path "**/.venv/**") | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -not -path "./examples/*" -not -path "./src/tests/*" -type f -name "*.py" ! -path "**/.venv/**") > codeclimate.json
    - pylint --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -not -path "./examples/*" -not -path "./src/tests/*" -type f -name "*.py" ! -path "**/.venv/**") > public/lint/index.html
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat public/badges/$CI_JOB_NAME.score)"
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always

run-test.sh:
  stage: Test
  image: python:3.7-slim
  before_script:
    - apt-get install -y gcc make autotools
    - git clone https://github.com/stedolan/jq.git
    - cd jq
    - autoreconf -i
    - ./configure --disable-maintainer-mode
    - make
    - sudo make install
    - cd ..
    - pip3 install -r requirements.txt
  script:
    - ./bin/run-tests.sh
